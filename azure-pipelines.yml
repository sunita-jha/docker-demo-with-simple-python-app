# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

name: ${{ parameters.Branch }}$(Rev:.r) 

parameters:
- name: Branch
  displayName: Branch to Deploy
  type: string
  default: develop

pool:
  vmImage: ubuntu-latest
variables:
  registry:  adipricerpocregistry.azurecr.io
  DOCKER-REPOSITORY-NAME: adipricerpoc
  dockerfilePath: '**/Dockerfile'
  azureSubscription: 'sp-dev-jenkins'
  dockerRegistryServiceConnection: 'acr-adipricer-poc'

resources: 
   repositories:
    - repository: templates
      type: git
      name: enterpriseapps-devops/corpit-templates-library
      ref: refs/heads/develop
    - repository: sourcecoderepo
      endpoint: SourceCodeRepoCheckOut
      type: git
      name: enterpriseapps-devops /adcdriver
      ref: refs/heads/$(branchName)
extends:
  template: pipeline-dev-blob-common.yml@templates
  parameters:
    targetApp: 'webApp'
    buildType: 'Yarn'
steps:
- task: Docker@2
  inputs:
    containerRegistry: 'acr-adipricer-poc'
    repository: 'adipricerpoc'
    command: 'buildAndPush'
    Dockerfile: '**/Dockerfile'
    tags: |
      latest
      $(Build.BuildId)

- task: AzureCLI@2
  inputs:
    azureSubscription: 'sp-dev-jenkins'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      az config set extension.use_dynamic_install=yes_without_prompt
      az containerapp update -n adi-poc-containerapp -g adi-eus-devops-poc-rg  --image $(registry)/$(image):$(imageTag) --container-name adipricerpoc   

